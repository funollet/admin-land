function warn () {
    # Just warn and continue.
    echo "[`basename $0`] warning: $*" ;
}

function error () {
    # Warn and exit.
    echo "[`basename $0`] error: $*" ; exit 1 ;
}

function test_var () {
    # Checks var has value.
    NAME=`echo $1`
    VALUE=$(eval echo \$`echo $1`)
    [ -z "$VALUE" ] && warn "$NAME void." ;
}

function check_execs () {
    # Verifies we can execute received files.

    for X in $@ ; do
        # Is it in $PATH?
        hash $X > /dev/null 2>&1 || error "$X not in PATH"
        FULLPATH=`hash -t $X`
        # If it's executable, jump to next file.
        [ -x $FULLPATH ] && continue
        # Is it a symbolic link...?
        [ ! -L $FULLPATH ] || error "$X non-executable"
        # ... and the referenced file is executable? (Ugly hack).
        stat -Lc '%A' $FULLPATH | grep 'x' || error "$X non-executable"
    done
}


test_var PWD