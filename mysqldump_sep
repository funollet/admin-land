#!/bin/bash
# mysqldump_sep
#   Dumps each mysql-database on individual files and gzips it.
#   Gets from ~/.my.cnf myslq-user, password and mysqldump options.
#
# :Author:   Jordi Funollet <jordi.f@ati.es>


# TODO:
# - check_conf_file ()


CONF_FILE="/etc/mysqldump_sep.conf"	# Custom configuration.
BACKUP_DIR="/home/backups/mysql"	# Default destination directory. 
REMOVE_PERIOD="1 month ago"		# Remove files older than...

# Use this file to overwrite default configuration.
if [ -f $CONF_FILE ] ; then
    . $CONF_FILE
fi


# Just warn and continue.
warn () { echo "[`basename $0`] warning: $*" ; } ;
# Warn and exit.
error () { echo "[`basename $0`] error: $*" ; exit 1 ; } ;


usage () {
    cat <<.
Usage:  `basename $0` [DBNAME]...
Wraps 'mysqldump' to dump every db on a gzipped file.

With no DBNAMEs, dumps all databases.

Example configuration for ~/.my.cnf
    [client]
    user            = me
    password        = secret
    
    [mysqldump]
    opt
.
}


remove_older () {
    # Remove files older than given period of time.

    PERIOD="$*"
    [ -z "$PERIOD" ] && error "invalid time period of files to remove."

    touch -d"$PERIOD" $BACKUP_DIR/.time_mark
    find  $BACKUP_DIR ! -newer $BACKUP_DIR/.time_mark | xargs rm
}





case $1 in
    '-u'|'--usage'|'-h'|'--help')
	usage && exit 1 ;;
esac

# Get list of databases to backup from command-line, or backup all.
DDBB="$*"
if [ -z "$DDBB" ] ; then
    DDBB=`mysql -BN -e 'show databases;'`
fi

# Safety tests.
[ -d $BACKUP_DIR ] || error "destination directory not found ($BACKUP_DIR)"
[ -z "$DDBB" ] && error "no databases specified"
umask 0077


remove_older $REMOVE_PERIOD


# Dump each database
for db in $DDBB ; do
    FNAME="$BACKUP_DIR/$db.`date +%F-%H%M%S`"
    mysqldump "$db" > "$FNAME" || warn "problems dumping $db"
    # Compress if has contents, warn otherwise.
    [ -s "$FNAME" ] && gzip -f "$FNAME" || warn "$FNAME void."
done

exit 0

