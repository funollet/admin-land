#!/bin/bash
# mysqldump_sep
#   Dumps each mysql-database on individual files and gzips it.
#   Gets from ~/.my.cnf myslq-user, password and mysqldump options.
#
# :Author:   Jordi Funollet <jordi.f@ati.es>


# TODO:
# - check_conf_file ()


####  Custom config  ####
# Destination directory.
BACKUPDIR='/home/backups/mysql'
#########################


# Just warn and continue.
warn () { echo "[`basename $0`] warning: $*" ; } ;
# Warn and exit.
error () { echo "[`basename $0`] error: $*" ; exit 1 ; } ;
# Checks var has value.
test_var () {
    NAME=`echo $1`
    VALUE=$(eval echo \$`echo $1`)
    [ -z "$VALUE" ] && warn "$NAME void." ;
}


usage () {
    cat <<.
Usage:  `basename $0` [DBNAME]...
Wraps 'mysqldump' to dump every db on a gzipped file.

With no DBNAMEs, dumps all databases.

Example configuration for ~/.my.cnf
    [client]
    user            = me
    password        = secret
    
    [mysqldump]
    opt
.
}




remove_older () {
    # Remove files older than given period of time.

    PERIOD="$*"
    [ -z "$PERIOD" ] && error "invalid time period of files to remove."

    touch -d"$PERIOD" $BACKUPDIR/.time_mark
    find  $BACKUPDIR ! -newer $BACKUPDIR/.time_mark | xargs rm
}



main () {
    case $1 in
	'-u'|'--usage'|'-h'|'--help')
	    usage && exit 1 ;;
    esac

    DDBB="$*"
    if [ -z "$DDBB" ] ; then
	# Backup all DBs.
        DDBB=`mysql -BN -e 'show databases;'`
    fi
    
    test_var BACKUPDIR
    umask 0077
    
    remove_older '1 month ago'

    # Dump each database
    for db in $DDBB ; do
	FNAME="$BACKUPDIR/$db.`date +%F-%H%M%S`"
	mysqldump "$db" > "$FNAME" || warn "problems dumping $db"
	# Compress if has contents, warn otherwise.
	[ -s "$FNAME" ] && gzip -f "$FNAME" || warn "$FNAME void."
    done

    exit 0
}


main
